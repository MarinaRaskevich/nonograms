{"version":3,"file":"script.js","mappings":"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","sources":["webpack://marinaraskevich-jsfe2024q4/webpack/bootstrap","webpack://marinaraskevich-jsfe2024q4/webpack/runtime/global","webpack://marinaraskevich-jsfe2024q4/webpack/runtime/publicPath","webpack://marinaraskevich-jsfe2024q4/./src/js/models/utils.js","webpack://marinaraskevich-jsfe2024q4/./src/js/models/timer.js","webpack://marinaraskevich-jsfe2024q4/./src/js/models/storage.js","webpack://marinaraskevich-jsfe2024q4/./src/js/components/Modal.js","webpack://marinaraskevich-jsfe2024q4/./src/js/models/sounds.js","webpack://marinaraskevich-jsfe2024q4/./src/js/components/Nonogram.js","webpack://marinaraskevich-jsfe2024q4/./src/js/models/winModal.js","webpack://marinaraskevich-jsfe2024q4/./src/js/models/buildGrid.js","webpack://marinaraskevich-jsfe2024q4/./src/js/models/switchers.js","webpack://marinaraskevich-jsfe2024q4/./src/js/models/levelPictures.js","webpack://marinaraskevich-jsfe2024q4/./src/js/models/randomGame.js","webpack://marinaraskevich-jsfe2024q4/./src/js/models/recordsTable.js","webpack://marinaraskevich-jsfe2024q4/./src/index.js","webpack://marinaraskevich-jsfe2024q4/./src/js/models/gameScreen.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript && document.currentScript.tagName.toUpperCase() === 'SCRIPT')\n\t\tscriptUrl = document.currentScript.src;\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) {\n\t\t\tvar i = scripts.length - 1;\n\t\t\twhile (i > -1 && (!scriptUrl || !/^http(s?):/.test(scriptUrl))) scriptUrl = scripts[i--].src;\n\t\t}\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export function createElement(tag, classes = [], textContent = \"\") {\r\n  const element = document.createElement(tag);\r\n  if (classes.length) element.classList.add(...classes);\r\n  if (textContent) element.textContent = textContent;\r\n  return element;\r\n}\r\n","let timerInterval;\r\nlet elapsedTime = 0;\r\n\r\nexport const startTimer = (savedTime = 0) => {\r\n  clearInterval(timerInterval);\r\n  elapsedTime = savedTime;\r\n  timerInterval = setInterval(() => {\r\n    elapsedTime++;\r\n    document.querySelector(\".timer\").textContent = formatTime(elapsedTime);\r\n  }, 1000);\r\n};\r\n\r\nexport const resetTimer = () => {\r\n  clearInterval(timerInterval);\r\n  elapsedTime = 0;\r\n  document.querySelector(\".timer\").textContent = \"00:00\";\r\n};\r\n\r\nexport const stopTimer = () => {\r\n  clearInterval(timerInterval);\r\n};\r\n\r\nexport const getElapsedTime = () => {\r\n  return elapsedTime;\r\n};\r\n\r\nexport const getTime = () => {\r\n  return formatTime(elapsedTime);\r\n};\r\n\r\nexport const formatTime = (seconds) => {\r\n  const mins = Math.floor(seconds / 60)\r\n    .toString()\r\n    .padStart(2, \"0\");\r\n  const secs = (seconds % 60).toString().padStart(2, \"0\");\r\n  return `${mins}:${secs}`;\r\n};\r\n","import { buildGrid } from \"./buildGrid.js\";\r\nimport { startTimer, getElapsedTime } from \"./timer.js\";\r\nimport pictures from \"../../json/pictures.json\";\r\n\r\nexport const saveGame = (e) => {\r\n  const pictureId = e.target.dataset.id;\r\n  const continueButton = document.querySelector(\".btn--continue\");\r\n  continueButton.disabled = false;\r\n\r\n  const state = {\r\n    id: pictureId,\r\n    userGrid: Array.from(document.querySelectorAll(\".cell\")).map((cell) =>\r\n      cell.classList.contains(\"filled\")\r\n        ? 1\r\n        : cell.classList.contains(\"crossed\")\r\n        ? -1\r\n        : 0\r\n    ),\r\n    elapsedTime: getElapsedTime(),\r\n  };\r\n  localStorage.setItem(`savedNonogram`, JSON.stringify(state));\r\n};\r\n\r\nexport const loadGame = () => {\r\n  const savedState = JSON.parse(localStorage.getItem(\"savedNonogram\"));\r\n  const selectedTemplate = pictures[savedState.id];\r\n  startTimer(savedState.elapsedTime);\r\n  buildGrid(selectedTemplate);\r\n\r\n  document.querySelectorAll(\".cell\").forEach((cell, i) => {\r\n    if (savedState.userGrid[i] === 1) cell.classList.add(\"filled\");\r\n    if (savedState.userGrid[i] === -1) cell.classList.add(\"crossed\");\r\n  });\r\n};\r\n\r\nexport const checkLocalStorage = (itemName) => {\r\n  return JSON.parse(localStorage.getItem(itemName));\r\n};\r\n\r\nexport const saveWinRecord = (name, difficulty, time) => {\r\n  const newRecord = {\r\n    name: name,\r\n    difficulty: difficulty,\r\n    time: time,\r\n  };\r\n\r\n  let savedRecords = checkLocalStorage(\"nonogramRecords\") || [];\r\n\r\n  const existingRecordIndex = savedRecords.findIndex(\r\n    (record) =>\r\n      record.name === newRecord.name &&\r\n      record.difficulty === newRecord.difficulty\r\n  );\r\n\r\n  if (existingRecordIndex !== -1) {\r\n    if (time < savedRecords[existingRecordIndex].time) {\r\n      savedRecords[existingRecordIndex].time = time;\r\n    }\r\n  } else {\r\n    savedRecords.push(newRecord);\r\n  }\r\n\r\n  savedRecords.sort((a, b) => a.time - b.time);\r\n  savedRecords = savedRecords.slice(0, 5);\r\n  localStorage.setItem(\"nonogramRecords\", JSON.stringify(savedRecords));\r\n};\r\n","import { createElement } from \"../models/utils.js\";\r\n\r\nexport class Modal {\r\n  constructor(classes) {\r\n    this.classes = classes;\r\n    this.modal = \"\";\r\n    this.modalCloseBtn = \"\";\r\n    this.overlay = \"\";\r\n  }\r\n\r\n  buildModal(content) {\r\n    //Overlay\r\n    this.overlay = createElement(\"div\", [\"overlay\", \"overlay_modal\"]);\r\n\r\n    //Modal\r\n    this.modal = createElement(\"div\", [\"modal\", this.classes]);\r\n\r\n    //Close Button\r\n    this.modalCloseBtn = createElement(\"span\", [\"span\", \"modal__close-icon\"]);\r\n    this.modalCloseBtn.innerHTML = `<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"40\" height=\"40\" viewBox=\"0 0 40 40\" fill=\"none\">\r\n      <path d=\"M30 10L10 30\" stroke=\"#ffe23e\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n      <path d=\"M10 10L30 30\" stroke=\"#ffe23e\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\r\n      </svg>`;\r\n\r\n    this.setContent(content);\r\n\r\n    this.appendModalElements();\r\n\r\n    // Bind Events\r\n    this.bindEvents();\r\n\r\n    // Open Modal\r\n    this.openModal();\r\n  }\r\n\r\n  setContent(content) {\r\n    if (typeof content === \"string\") {\r\n      this.modal.innerHTML = content;\r\n    } else {\r\n      this.modal.innerHTML = \"\";\r\n      this.modal.appendChild(content);\r\n    }\r\n  }\r\n\r\n  appendModalElements() {\r\n    this.modal.append(this.modalCloseBtn);\r\n    this.overlay.append(this.modal);\r\n  }\r\n\r\n  bindEvents() {\r\n    this.modalCloseBtn.addEventListener(\"click\", (e) => {\r\n      e.stopPropagation();\r\n      this.closeModal(e);\r\n    });\r\n\r\n    this.overlay.addEventListener(\"click\", (e) => {\r\n      if (e.target === this.overlay) {\r\n        this.closeModal(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  openModal() {\r\n    document.body.append(this.overlay);\r\n    document.body.classList.add(\"scroll-off\");\r\n  }\r\n\r\n  closeModal(e) {\r\n    let element = e.target;\r\n    if (\r\n      element.classList.contains(\"overlay\") ||\r\n      element.closest(\".modal__close-icon\")\r\n    ) {\r\n      document.body.classList.remove(\"scroll-off\");\r\n      document.querySelector(\".overlay\").remove();\r\n    }\r\n  }\r\n}\r\n","import cellFill from \"../../../src/sounds/mark-1.mp3\";\r\nimport cellCross from \"../../../src/sounds/mark-0.mp3\";\r\nimport cellClear from \"../../../src/sounds/clear.mp3\";\r\nimport win from \"../../../src/sounds/winner.mp3\";\r\n\r\nconst sounds = {\r\n  cellFill: new Audio(cellFill),\r\n  cellCross: new Audio(cellCross),\r\n  cellClear: new Audio(cellClear),\r\n  win: new Audio(win),\r\n};\r\n\r\nexport const playSound = (event) => {\r\n  const isSoundEnabled = checkSoundMode();\r\n  if (!isSoundEnabled) return;\r\n\r\n  if (sounds[event]) {\r\n    sounds[event].currentTime = 0;\r\n    sounds[event].play();\r\n  }\r\n};\r\n\r\nexport const checkSoundMode = () => {\r\n  return !localStorage.getItem(\"soundMode\")\r\n    ? true\r\n    : localStorage.getItem(\"soundMode\") === \"on\";\r\n};\r\n\r\nexport const toggleSoundMode = () => {\r\n  const soundToggle = document.querySelector(\".settings__sound\");\r\n\r\n  if (checkSoundMode()) {\r\n    soundToggle.classList.remove(\"icon--on\");\r\n    soundToggle.classList.add(\"icon--off\");\r\n    localStorage.setItem(\"soundMode\", \"off\");\r\n  } else {\r\n    soundToggle.classList.add(\"icon--on\");\r\n    soundToggle.classList.remove(\"icon--off\");\r\n    localStorage.setItem(\"soundMode\", \"on\");\r\n  }\r\n};\r\n","import { createElement } from \"../models/utils\";\r\nimport {\r\n  startTimer,\r\n  resetTimer,\r\n  stopTimer,\r\n  getElapsedTime,\r\n} from \"../models/timer\";\r\nimport { saveWinRecord } from \"../models/storage\";\r\nimport { buildWinModal } from \"../models/winModal\";\r\nimport { playSound } from \"../models/sounds\";\r\n\r\nexport let currentGame = null;\r\nconst mediaQuery = window.matchMedia(\"(max-width: 820px)\");\r\n\r\nexport class Nonogram {\r\n  constructor(\r\n    container,\r\n    { id, difficulty, name, gridData, clues, gridSize = 5 }\r\n  ) {\r\n    this.container = container;\r\n    this.id = id;\r\n    this.difficulty = difficulty;\r\n    this.name = name;\r\n    this.gridData = gridData;\r\n    this.clues = clues;\r\n    this.gridSize = gridSize;\r\n    this.maxLengthCol = null;\r\n    this.maxLengthRow = null;\r\n    this.isFirstClick = true;\r\n    this.isGameOver = false;\r\n    this.isFillMode = true;\r\n    this.userGrid = Array.from({ length: gridSize }, () =>\r\n      Array(gridSize).fill(0)\r\n    );\r\n    currentGame = this;\r\n  }\r\n\r\n  renderGrid() {\r\n    this.maxLengthRow = Math.max(\r\n      ...this.clues.rowClues.map((subarray) => subarray.length)\r\n    );\r\n    this.maxLengthCol = Math.max(\r\n      ...this.clues.colClues.map((subarray) => subarray.length)\r\n    );\r\n\r\n    this.container.innerHTML = \"\";\r\n    this.container.style.setProperty(\r\n      \"--cells-number\",\r\n      this.gridSize + this.maxLengthRow\r\n    );\r\n\r\n    // First round (see picture gridBuildingLogic.png)\r\n    for (let i = 0; i < this.maxLengthCol; i++) {\r\n      for (let j = 0; j < this.maxLengthRow; j++) {\r\n        // Add empty cells\r\n        this.container.appendChild(createElement(\"div\", [\"empty-cell\"]));\r\n      }\r\n\r\n      for (let k = 0; k < this.gridSize; k++) {\r\n        // Add col clue cells\r\n        const clue = this.clues.colClues[k];\r\n        this.container.appendChild(this.createClueCell(clue[i], false, i, k));\r\n      }\r\n    }\r\n\r\n    // Second round (see picture gridBuildingLogic.png)\r\n    for (let i = 0; i < this.gridSize; i++) {\r\n      for (let k = 0; k < this.maxLengthRow; k++) {\r\n        const clue = this.clues.rowClues[i];\r\n        // Add row clue cells\r\n        this.container.appendChild(this.createClueCell(clue[k], true, i, k));\r\n      }\r\n\r\n      for (let j = 0; j < this.gridSize; j++) {\r\n        // Add cells\r\n        this.container.appendChild(this.createGridCell(i, j));\r\n      }\r\n    }\r\n  }\r\n\r\n  createClueCell = (number, isRowClue, rowIndex, colIndex) => {\r\n    const isRightBorder =\r\n      !isRowClue &&\r\n      ((this.gridSize === 15 && (colIndex === 4 || colIndex === 9)) ||\r\n        (this.gridSize === 10 && colIndex === 4));\r\n    const isLeftBorder = !isRowClue && colIndex == 0;\r\n    const isBottomBorder =\r\n      (isRowClue &&\r\n        this.gridSize === 15 &&\r\n        (rowIndex === 4 || rowIndex === 9)) ||\r\n      (isRowClue && this.gridSize === 10 && rowIndex === 4);\r\n    const isTopBorder = isRowClue && rowIndex == 0;\r\n\r\n    const classes = [\"clue\"];\r\n    if (isRightBorder) classes.push(\"right-border\");\r\n    if (isTopBorder) classes.push(\"top-border\");\r\n    if (isBottomBorder) classes.push(\"bottom-border\");\r\n    if (isLeftBorder) classes.push(\"left-border\");\r\n\r\n    const clueCell = createElement(\"div\", classes);\r\n    clueCell.textContent = number === 0 ? \"\" : number;\r\n\r\n    return clueCell;\r\n  };\r\n\r\n  createGridCell = (rowIndex, colIndex) => {\r\n    const isRightBorder =\r\n      (this.gridSize === 15 && (colIndex === 4 || colIndex === 9)) ||\r\n      (this.gridSize === 10 && colIndex === 4);\r\n    const isBottomBorder =\r\n      (this.gridSize === 15 && (rowIndex === 4 || rowIndex === 9)) ||\r\n      (this.gridSize === 10 && rowIndex === 4);\r\n    const isTopBorder = rowIndex == 0;\r\n    const isLeftBorder = colIndex == 0;\r\n\r\n    const classes = [\"cell\"];\r\n    if (isRightBorder) classes.push(\"right-border\");\r\n    if (isBottomBorder) classes.push(\"bottom-border\");\r\n    if (isTopBorder) classes.push(\"top-border\");\r\n    if (isLeftBorder) classes.push(\"left-border\");\r\n    if (this.isDemo && this.gridData[rowIndex][colIndex] == 1)\r\n      classes.push(\"filled\");\r\n\r\n    const cell = createElement(\"div\", classes);\r\n    cell.dataset.row = rowIndex;\r\n    cell.dataset.col = colIndex;\r\n\r\n    cell.addEventListener(\"click\", () => {\r\n      if (this.isGameOver) return;\r\n      if (this.isFirstClick) {\r\n        startTimer();\r\n        this.isFirstClick = false;\r\n      }\r\n      if (mediaQuery.matches) {\r\n        if (this.isFillMode) {\r\n          cell.classList.remove(\"crossed\");\r\n          this.toggleClass(cell, \"filled\");\r\n          this.updateUserGrid(rowIndex, colIndex, 1);\r\n          playSound(\r\n            cell.classList.contains(\"filled\") ? \"cellFill\" : \"cellClear\"\r\n          );\r\n        } else {\r\n          cell.classList.remove(\"filled\");\r\n          this.toggleClass(cell, \"crossed\");\r\n          this.updateUserGrid(rowIndex, colIndex, 0);\r\n          playSound(\r\n            cell.classList.contains(\"crossed\") ? \"cellCross\" : \"cellClear\"\r\n          );\r\n        }\r\n      } else {\r\n        cell.classList.remove(\"crossed\");\r\n        this.toggleClass(cell, \"filled\");\r\n        this.updateUserGrid(rowIndex, colIndex, 1);\r\n        cell.classList.contains(\"filled\")\r\n          ? playSound(\"cellFill\")\r\n          : playSound(\"cellClear\");\r\n      }\r\n    });\r\n\r\n    cell.addEventListener(\"contextmenu\", (e) => {\r\n      e.preventDefault();\r\n      if (this.isGameOver) return;\r\n      if (this.isFirstClick) {\r\n        startTimer();\r\n        this.isFirstClick = false;\r\n      }\r\n\r\n      cell.classList.remove(\"filled\");\r\n      this.toggleClass(cell, \"crossed\");\r\n      this.updateUserGrid(rowIndex, colIndex, 0);\r\n      cell.classList.contains(\"crossed\")\r\n        ? playSound(\"cellCross\")\r\n        : playSound(\"cellClear\");\r\n    });\r\n\r\n    return cell;\r\n  };\r\n\r\n  updateUserGrid(row, col, value) {\r\n    this.userGrid[row][col] = this.userGrid[row][col] === value ? 0 : 1;\r\n    this.checkWin();\r\n  }\r\n\r\n  checkWin() {\r\n    const isWin = this.userGrid.every((row, i) =>\r\n      row.every((cell, j) => cell === this.gridData[i][j])\r\n    );\r\n\r\n    if (isWin) {\r\n      this.isGameOver = true;\r\n      playSound(\"win\");\r\n      stopTimer();\r\n      saveWinRecord(this.name, this.difficulty, getElapsedTime());\r\n      buildWinModal(this.name, this.difficulty, getElapsedTime());\r\n    }\r\n  }\r\n\r\n  showSolution() {\r\n    this.isGameOver = true;\r\n    stopTimer();\r\n    this.container.querySelectorAll(\".cell\").forEach((cell) => {\r\n      const row = parseInt(cell.dataset.row, 10);\r\n      const col = parseInt(cell.dataset.col, 10);\r\n\r\n      if (this.gridData[row][col] === 1) {\r\n        cell.classList.add(\"filled\");\r\n        cell.classList.remove(\"crossed\");\r\n      } else {\r\n        cell.classList.remove(\"filled\", \"crossed\");\r\n      }\r\n    });\r\n  }\r\n\r\n  toggleClass(element, className) {\r\n    element.classList.toggle(className);\r\n  }\r\n\r\n  setFillMode(isFillMode) {\r\n    this.isFillMode = isFillMode;\r\n  }\r\n\r\n  resetGrid() {\r\n    this.isGameOver = false;\r\n    this.isFirstClick = true;\r\n    this.userGrid = Array.from({ length: this.gridSize }, () =>\r\n      Array(this.gridSize).fill(0)\r\n    );\r\n    resetTimer();\r\n    this.container.querySelectorAll(\".cell\").forEach((cell) => {\r\n      cell.classList.remove(\"filled\", \"crossed\");\r\n    });\r\n  }\r\n}\r\n","import { Modal } from \"../components/Modal.js\";\r\nimport { createElement } from \"./utils.js\";\r\n\r\nexport const buildWinModal = (name, difficulty, time) => {\r\n  const message = createElement(\r\n    \"p\",\r\n    [\"win__message\"],\r\n    `Congratulations 🎉 You have completely solved the ${name} picture in ${time} seconds`\r\n  );\r\n\r\n  const modal = new Modal(\"modal__win\");\r\n  modal.buildModal(message);\r\n};\r\n","import { Nonogram } from \"../components/Nonogram.js\";\r\nimport pictures from \"../../json/pictures.json\";\r\nimport { getTime } from \"../models/timer.js\";\r\nimport { saveGame } from \"../models/storage.js\";\r\n\r\nexport const buildGrid = (input) => {\r\n  const nonogramGrid = document.querySelector(\".nonogram\");\r\n  const pictureHeader = document.querySelector(\".main__header\");\r\n  const gameActionButtons = document.querySelectorAll(\".btn--game-action\");\r\n  gameActionButtons.forEach((button) => {\r\n    button.disabled = false;\r\n  });\r\n  const timer = document.querySelector(\".timer\");\r\n  timer.textContent = getTime();\r\n  timer.classList.remove(\"hidden\");\r\n  const mediaQuery = window.matchMedia(\"(max-width: 820px)\");\r\n  if (mediaQuery.matches) {\r\n    const tapSwitcher = document.querySelector(\".tap-mode\");\r\n    tapSwitcher.classList.remove(\"hidden\");\r\n  }\r\n  let selectedTemplate;\r\n  let pictureId;\r\n  if (input instanceof Event) {\r\n    pictureId = input.target.dataset.id;\r\n    selectedTemplate = pictures[pictureId];\r\n  } else {\r\n    selectedTemplate = input;\r\n    pictureId = selectedTemplate.id;\r\n  }\r\n\r\n  pictureHeader.textContent = selectedTemplate.name;\r\n  pictureHeader.classList.remove(\"hidden\");\r\n\r\n  const saveBtn = document.querySelector(\".btn--save\");\r\n  saveBtn.setAttribute(\"data-id\", pictureId);\r\n  saveBtn.addEventListener(\"click\", saveGame);\r\n\r\n  const gameGrid = new Nonogram(nonogramGrid, selectedTemplate);\r\n  document.querySelector(\".btn--solution\").onclick = () =>\r\n    gameGrid.showSolution();\r\n  document.querySelector(\".btn--reset\").onclick = () => gameGrid.resetGrid();\r\n  gameGrid.renderGrid();\r\n};\r\n","import { currentGame } from \"../components/Nonogram.js\";\r\n\r\nexport const modeSwitcher = (e) => {\r\n  const body = document.querySelector(\".app\");\r\n  if (e.target.checked) {\r\n    localStorage.setItem(\"darkMode\", \"enabled\");\r\n    body.classList.add(\"dark-mode\");\r\n  } else {\r\n    localStorage.setItem(\"darkMode\", \"disabled\");\r\n    body.classList.remove(\"dark-mode\");\r\n  }\r\n};\r\n\r\nexport const tapSwitcher = (e) => {\r\n  const isFillMode = e.target.checked;\r\n\r\n  if (currentGame) {\r\n    currentGame.setFillMode(!isFillMode);\r\n  }\r\n};\r\n","import pictures from \"../../json/pictures.json\";\r\nimport { createElement } from \"./utils\";\r\nimport { buildGrid } from \"./buildGrid\";\r\nimport { resetTimer } from \"./timer\";\r\n\r\nexport const showLevelPictures = (e) => {\r\n  resetTimer();\r\n  const gameActionButtons = document.querySelectorAll(\".btn--game-action\");\r\n  gameActionButtons.forEach((button) => {\r\n    button.disabled = true;\r\n  });\r\n  const timer = document.querySelector(\".timer\");\r\n  timer.classList.add(\"hidden\");\r\n  const level = e.target.dataset.level;\r\n  const nonogram = document.querySelector(\".nonogram\");\r\n  const mediaQuery = window.matchMedia(\"(max-width: 820px)\");\r\n  if (mediaQuery.matches) {\r\n    const tapSwitcher = document.querySelector(\".tap-mode\");\r\n    tapSwitcher.classList.add(\"hidden\");\r\n  }\r\n  const pictureHeader = document.querySelector(\".main__header\");\r\n  pictureHeader.textContent = \"\";\r\n  nonogram.textContent = \"\";\r\n  nonogram.style.setProperty(\"--cells-number\", 1);\r\n  pictures.forEach((picture) => {\r\n    if (picture.difficulty == level) {\r\n      const pictureButton = createElement(\r\n        \"div\",\r\n        [\"picture-name\"],\r\n        picture.name\r\n      );\r\n      pictureButton.setAttribute(\"data-id\", picture.id);\r\n      pictureButton.addEventListener(\"click\", buildGrid);\r\n      nonogram.append(pictureButton);\r\n    }\r\n  });\r\n};\r\n","import pictures from \"../../json/pictures.json\";\r\nimport { buildGrid } from \"./buildGrid.js\";\r\nimport { resetTimer } from \"./timer.js\";\r\n\r\nexport const randomGame = () => {\r\n  resetTimer();\r\n  const nbPictures = pictures.length;\r\n  if (nbPictures === 0) return;\r\n\r\n  const randomIndex = Math.floor(Math.random() * nbPictures);\r\n  const randomPicture = pictures[randomIndex];\r\n\r\n  buildGrid(randomPicture);\r\n};\r\n","import { resetTimer, formatTime } from \"./timer\";\r\nimport { createElement } from \"./utils\";\r\n\r\nexport const showScoreTable = () => {\r\n  resetTimer();\r\n  const nonogram = document.querySelector(\".nonogram\");\r\n  const pictureHeader = document.querySelector(\".main__header\");\r\n  const timer = document.querySelector(\".timer\");\r\n  timer.classList.add(\"hidden\");\r\n  pictureHeader.textContent = \"\";\r\n  nonogram.textContent = \"\";\r\n  nonogram.style.setProperty(\"--cells-number\", 1);\r\n  const gameActionButtons = document.querySelectorAll(\".btn--game-action\");\r\n  gameActionButtons.forEach((button) => {\r\n    button.disabled = true;\r\n  });\r\n  const mediaQuery = window.matchMedia(\"(max-width: 820px)\");\r\n  if (mediaQuery.matches) {\r\n    const tapSwitcher = document.querySelector(\".tap-mode\");\r\n    tapSwitcher.classList.add(\"hidden\");\r\n  }\r\n  pictureHeader.textContent = \"High score table\";\r\n  const solvedPicturesTable = createElement(\"table\");\r\n  const solvedPicturesTableBody = createElement(\"tbody\");\r\n  const solvedPicturesTableHead = createElement(\"thead\");\r\n  const tr = createElement(\"tr\", []);\r\n  const thRate = createElement(\"th\", [], \"\");\r\n  const thName = createElement(\"th\", [], \"Picture name\");\r\n  const thDifficulty = createElement(\"th\", [], \"Difficulty\");\r\n  const thTime = createElement(\"th\", [], \"Time\");\r\n  tr.append(thRate, thName, thDifficulty, thTime);\r\n  solvedPicturesTableHead.append(tr);\r\n\r\n  const savedRecords = loadWinRecords();\r\n\r\n  savedRecords.forEach((record, index) => {\r\n    solvedPicturesTableBody.appendChild(\r\n      addTableRow(\r\n        index,\r\n        record.name,\r\n        record.difficulty,\r\n        formatTime(record.time)\r\n      )\r\n    );\r\n  });\r\n\r\n  for (let i = savedRecords.length; i < 5; i++) {\r\n    solvedPicturesTableBody.appendChild(addTableRow(i));\r\n  }\r\n\r\n  solvedPicturesTable.append(solvedPicturesTableHead, solvedPicturesTableBody);\r\n  nonogram.append(solvedPicturesTable);\r\n};\r\n\r\nconst loadWinRecords = () => {\r\n  return JSON.parse(localStorage.getItem(\"nonogramRecords\")) || [];\r\n};\r\n\r\nconst addTableRow = (index, name = \"--\", difficulty = \"--\", time = \"--\") => {\r\n  const tr = createElement(\"tr\", []);\r\n  const tdRate = createElement(\"td\", [], index + 1);\r\n  const tdName = createElement(\"td\", [], name);\r\n  const tdDifficulty = createElement(\"td\", [], difficulty);\r\n  const tdTime = createElement(\"td\", [], time);\r\n  tr.append(tdRate, tdName, tdDifficulty, tdTime);\r\n  return tr;\r\n};\r\n","import { buildGrid } from \"./js/models/buildGrid.js\";\r\nimport { buildGameScreen } from \"./js/models/gameScreen.js\";\r\nimport { Nonogram } from \"./js/components/Nonogram.js\";\r\nimport pictures from \"./json/pictures.json\";\r\nimport levels from \"./json/levels.json\";\r\n\r\nwindow.onload = function () {\r\n  buildGameScreen(levels);\r\n\r\n  const easyImages = pictures.filter(\r\n    (picture) => picture.difficulty === \"easy\"\r\n  );\r\n  const selectedTemplate = easyImages[0];\r\n  console.log(\"Bug matrix: \");\r\n  console.log(selectedTemplate.gridData);\r\n  console.log(\"Question matrix: \");\r\n  console.log(pictures[0].gridData);\r\n  buildGrid(selectedTemplate);\r\n};\r\n","import { createElement } from \"./utils\";\r\nimport { modeSwitcher, tapSwitcher } from \"./switchers.js\";\r\nimport { showLevelPictures } from \"./levelPictures.js\";\r\nimport { randomGame } from \"./randomGame.js\";\r\nimport { loadGame, checkLocalStorage } from \"./storage.js\";\r\nimport { showScoreTable } from \"./recordsTable.js\";\r\nimport { checkSoundMode, toggleSoundMode } from \"./sounds.js\";\r\n\r\nexport const buildGameScreen = (levels) => {\r\n  //Main dom elements\r\n  const body = document.querySelector(\"body\");\r\n  body.classList.add(\"app\");\r\n  const bodyWrapper = createElement(\"div\", [\"app__wrapper\"]);\r\n  const appHeader = createElement(\"h1\", [\"header\"], \"Nonograms\");\r\n  const gameContainer = createElement(\"div\", [\"game\"]);\r\n  const centralContainer = createElement(\"div\", [\"game__main\"]);\r\n  const rightContainer = createElement(\"div\", [\"game__buttons\"]);\r\n  const leftContainer = createElement(\"div\", [\"game__left\"]);\r\n\r\n  //Left container elements\r\n\r\n  //Game settings\r\n  const gameSettingsDiv = createElement(\"div\", [\"game__settings\"]);\r\n\r\n  //Mode switcher\r\n  const modeSwitcherDiv = createElement(\"div\", [\"settings__mode\"]);\r\n  const modeSwitcherInput = createElement(\"input\", [\"mode__input\"]);\r\n  modeSwitcherInput.setAttribute(\"type\", \"checkbox\");\r\n  modeSwitcherInput.id = \"modeSwitcher\";\r\n  modeSwitcherInput.name = \"mode\";\r\n  modeSwitcherInput.addEventListener(\"change\", modeSwitcher);\r\n  if (localStorage.getItem(\"darkMode\") === \"enabled\") {\r\n    modeSwitcherInput.checked = true;\r\n    body.classList.add(\"dark-mode\");\r\n  }\r\n  const modeSwitcherLabel = createElement(\"label\", [\"mode__label\"]);\r\n  const spanLabel = createElement(\"span\", []);\r\n  modeSwitcherLabel.setAttribute(\"for\", \"modeSwitcher\");\r\n  modeSwitcherLabel.appendChild(spanLabel);\r\n  modeSwitcherDiv.append(modeSwitcherInput, modeSwitcherLabel);\r\n\r\n  const soundMode = checkSoundMode() ? \"icon--on\" : \"icon--off\";\r\n  const soundSwitcherDiv = createElement(\"div\", [\"settings__sound\", soundMode]);\r\n  soundSwitcherDiv.addEventListener(\"click\", toggleSoundMode);\r\n\r\n  gameSettingsDiv.append(modeSwitcherDiv, soundSwitcherDiv);\r\n\r\n  //Levels\r\n  const levelsContainer = createElement(\"div\", [\"levels\"]);\r\n  levels.forEach((level) => {\r\n    const levelContainer = createElement(\r\n      \"div\",\r\n      [\"level\"],\r\n      `${level.name}(${level.format})`\r\n    );\r\n    levelContainer.setAttribute(\"data-level\", level.name);\r\n    levelContainer.addEventListener(\"click\", showLevelPictures);\r\n\r\n    levelsContainer.appendChild(levelContainer);\r\n  });\r\n\r\n  //Buttons\r\n  const buttonsContainer = createElement(\"div\", [\"left__buttons\"]);\r\n  const continueLastGameButton = createElement(\r\n    \"button\",\r\n    [\"btn\", \"btn--continue\"],\r\n    \"Continue last game\"\r\n  );\r\n  continueLastGameButton.addEventListener(\"click\", loadGame);\r\n  continueLastGameButton.disabled = !checkLocalStorage(\"savedNonogram\");\r\n\r\n  const randomGameButton = createElement(\r\n    \"button\",\r\n    [\"btn\", \"btn--random\"],\r\n    \"Random game\"\r\n  );\r\n  randomGameButton.addEventListener(\"click\", randomGame);\r\n\r\n  buttonsContainer.append(randomGameButton, continueLastGameButton);\r\n\r\n  leftContainer.append(gameSettingsDiv, levelsContainer, buttonsContainer);\r\n\r\n  //Right container (action buttons in game state and table of past games)\r\n  const resetGameButton = createElement(\r\n    \"button\",\r\n    [\"btn\", \"btn--reset\", \"btn--game-action\"],\r\n    \"Reset game\"\r\n  );\r\n  const saveGameButton = createElement(\r\n    \"button\",\r\n    [\"btn\", \"btn--save\", \"btn--game-action\"],\r\n    \"Save game\"\r\n  );\r\n\r\n  const solutionButton = createElement(\r\n    \"button\",\r\n    [\"btn\", \"btn--solution\", \"btn--game-action\"],\r\n    \"Show solution\"\r\n  );\r\n\r\n  const scoreTableButton = createElement(\r\n    \"button\",\r\n    [\"btn\", \"btn--table\"],\r\n    \"Show score table\"\r\n  );\r\n  scoreTableButton.addEventListener(\"click\", showScoreTable);\r\n\r\n  rightContainer.append(\r\n    scoreTableButton,\r\n    resetGameButton,\r\n    saveGameButton,\r\n    solutionButton\r\n  );\r\n\r\n  // Copyright container\r\n  const copyrightDiv = createElement(\"div\", [\"copyright\"]);\r\n  const githubLink = createElement(\r\n    \"a\",\r\n    [\"gh__link\"],\r\n    \"Marina Efendieva-Raskevich\"\r\n  );\r\n  githubLink.setAttribute(\"href\", \"https://github.com/MarinaRaskevich\");\r\n  const copyright = createElement(\r\n    \"div\",\r\n    [\"copyright__author-name\"],\r\n    \"© Copyright 2025\"\r\n  );\r\n  copyrightDiv.append(copyright, githubLink);\r\n\r\n  //Central container (nonograms names or game)\r\n  const nonogram = createElement(\"div\", [\"nonogram\"]);\r\n  const timer = createElement(\"div\", [\"timer\"]);\r\n  const pictureHeader = createElement(\"h3\", [\"main__header\"]);\r\n  pictureHeader.classList.add(\"hidden\");\r\n\r\n  //Cell click switcher\r\n  const tapSwitcherDiv = createElement(\"div\", [\"tap-mode\"]);\r\n  const tapSwitcherInput = createElement(\"input\", [\"tap-mode__input\"]);\r\n  tapSwitcherInput.setAttribute(\"type\", \"checkbox\");\r\n  tapSwitcherInput.addEventListener(\"change\", tapSwitcher);\r\n  tapSwitcherInput.id = \"tapSwitcher\";\r\n  const tapSwitcherLabel = createElement(\"label\", [\"tap-mode__label\"]);\r\n  const tapSwitcherSpanLabel = createElement(\"span\", []);\r\n  tapSwitcherLabel.setAttribute(\"for\", \"tapSwitcher\");\r\n  tapSwitcherLabel.appendChild(tapSwitcherSpanLabel);\r\n  tapSwitcherDiv.append(tapSwitcherInput, tapSwitcherLabel);\r\n\r\n  centralContainer.append(timer, pictureHeader, nonogram, tapSwitcherDiv);\r\n  gameContainer.append(leftContainer, centralContainer, rightContainer);\r\n  bodyWrapper.append(appHeader, gameContainer, copyrightDiv);\r\n  body.append(bodyWrapper);\r\n};\r\n"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","tagName","toUpperCase","src","scripts","getElementsByTagName","length","i","test","Error","replace","p","createElement","tag","_element$classList","classes","arguments","undefined","textContent","element","classList","add","apply","timerInterval","elapsedTime","startTimer","savedTime","clearInterval","setInterval","querySelector","formatTime","resetTimer","stopTimer","getElapsedTime","seconds","mins","Math","floor","toString","padStart","secs","concat","saveGame","pictureId","target","dataset","id","disabled","state","userGrid","Array","from","querySelectorAll","map","cell","contains","localStorage","setItem","JSON","stringify","loadGame","savedState","parse","getItem","selectedTemplate","pictures","buildGrid","forEach","checkLocalStorage","itemName","Modal","_classCallCheck","modal","modalCloseBtn","overlay","key","value","content","innerHTML","setContent","appendModalElements","bindEvents","openModal","appendChild","append","_this","addEventListener","stopPropagation","closeModal","body","closest","remove","sounds","cellFill","Audio","cellCross","cellClear","win","playSound","event","checkSoundMode","currentTime","play","toggleSoundMode","soundToggle","currentGame","mediaQuery","matchMedia","Nonogram","container","_ref","difficulty","name","gridData","clues","_ref$gridSize","gridSize","_defineProperty","number","isRowClue","rowIndex","colIndex","isRightBorder","isLeftBorder","isBottomBorder","isTopBorder","push","clueCell","isDemo","row","col","isGameOver","isFirstClick","matches","isFillMode","toggleClass","updateUserGrid","preventDefault","maxLengthCol","maxLengthRow","fill","max","_toConsumableArray","rowClues","subarray","colClues","style","setProperty","j","k","clue","createClueCell","createGridCell","checkWin","time","newRecord","savedRecords","existingRecordIndex","_this2","every","findIndex","record","sort","a","b","slice","message","buildModal","buildWinModal","_this3","parseInt","className","toggle","_this4","input","nonogramGrid","pictureHeader","button","timer","Event","saveBtn","setAttribute","gameGrid","onclick","showSolution","resetGrid","renderGrid","modeSwitcher","checked","tapSwitcher","setFillMode","showLevelPictures","level","nonogram","picture","pictureButton","randomGame","nbPictures","randomIndex","random","randomPicture","showScoreTable","solvedPicturesTable","solvedPicturesTableBody","solvedPicturesTableHead","tr","thRate","thName","thDifficulty","thTime","loadWinRecords","index","addTableRow","tdRate","tdName","tdDifficulty","tdTime","onload","levels","bodyWrapper","appHeader","gameContainer","centralContainer","rightContainer","leftContainer","gameSettingsDiv","modeSwitcherDiv","modeSwitcherInput","modeSwitcherLabel","spanLabel","soundSwitcherDiv","levelsContainer","levelContainer","format","buttonsContainer","continueLastGameButton","randomGameButton","resetGameButton","saveGameButton","solutionButton","scoreTableButton","copyrightDiv","githubLink","copyright","tapSwitcherDiv","tapSwitcherInput","tapSwitcherLabel","tapSwitcherSpanLabel","buildGameScreen","filter","console","log"],"sourceRoot":""}